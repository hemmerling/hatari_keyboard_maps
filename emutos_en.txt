# HATARI Keyboard file
# For PC, with Windows10, German keyboard
# For HATARI, with English EmuTOS 1.0.0
# Objective: US keyboard mapping, for testing
#
# This is an example for a keyboard mapping file that can be used in Hatari
# by loading it from the keyboard setup dialog.
#
# Lines starting with a '#' or with a ';' are comments. All other lines
# should contain exactly one key name and a scancode, separated by a comma.
# Comment characters can be quoted with '\#' and '\;'.
#
# The key name is the libSDL symbolic name of the key, see the following
# URL for a list: https://wiki.libsdl.org/SDL_Keycode
# You can also use the symbolic keycode value instead of the name,
# which you can get with the "--trace keymap" output from Hatari, for
# example, but note that the values are different between SDL1 and SDL2
# and thus they are not portable.
#
# The given host key will be mapped to the ST key which is specified by
# second number - the ST scan code of the key.  "--trace keymap" output
# shows the already mapped scan code.
#
# All numbers should be given as decimals (not hexadecimals).
#
# Note that using keyboard mapping file causes Hatari to use symbolic
# key mapping.  Symbolic key mapping does not work with so called "dead"
# keys.
#
# Scan codes for Atari keyboard key positions can be seen here:
#   http://eerott.mbnet.fi/hatari/img/st-keymap.png
#
# tests/keymap/ directory contains programs to discover/test the PC SDL
# and Atari scan code values.  Hatari's default PC key code -> ST scan
# code mappings are in src/keymap.c source file.
#
# Example: If you want to get the 'y' and 'z' keys like on a US keyboard, 
# for Hatari running on Windows10, with German keyboard,
# you can use the following two lines to map the PC keys to the right
# ST scan codes:
#121,44
#122,21
# or
Y,44
Z,21
# However, with an English EmuTOS, the ST scan codes are always interpreted 
# as scancodes of the ATARI-ST QUERTY keyboard :-(, 
# there will never be German Umlaute ( äöü,... ) on the screen :-(.
# As scancodes do not differ if a SHIFT or CTRL is pressed, 
# the assignment of a scancode to up to 3 different character symbols is fixed :-(.
